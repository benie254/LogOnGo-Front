{"version":3,"file":"angular-sidebar-menu.js","sources":["../../../library/src/lib/sidebar-menu.interface.ts","../../../library/src/lib/internal/anchor.service.ts","../../../library/src/lib/internal/node.service.ts","../../../library/src/lib/internal/role.service.ts","../../../library/src/lib/internal/search.service.ts","../../../library/src/lib/internal/utils.ts","../../../library/src/lib/sidebar-menu.component.ts","../../../library/src/lib/internal/node.animations.ts","../../../library/src/lib/internal/item.component.ts","../../../library/src/lib/internal/node.component.ts","../../../library/src/lib/internal/anchor.component.ts","../../../library/src/lib/sidebar-menu.module.ts","../../../library/src/public-api.ts","../../../library/src/angular-sidebar-menu.ts"],"sourcesContent":["import { Role } from './internal/role.service';\n\nexport type UnAuthorizedVisibility = 'hidden' | 'disabled';\n\nexport enum Modes {\n  EXPANDED = 'expanded',\n  EXPANDABLE = 'expandable',\n  MINI = 'mini',\n}\n\ntype MenuItemID = number | string;\n\nexport interface MenuItemBadge {\n  label: string;\n  classes: string;\n}\n\nexport interface MenuItemBase {\n  id?: MenuItemID;\n  label: string;\n  iconClasses?: string;\n  badges?: MenuItemBadge[];\n  roles?: Role[];\n}\n\nexport interface MenuItemLeafRoute extends MenuItemBase {\n  route: string;\n  linkActiveExact?: boolean;\n}\n\nexport interface MenuItemLeafURL extends MenuItemBase {\n  url: string;\n  target?: string;\n}\n\nexport interface MenuItemHeader {\n  id?: MenuItemID;\n  header: string;\n}\n\nexport interface MenuItemNode extends MenuItemBase {\n  children: MenuItem[];\n}\n\ntype Without<T, U> = { [P in Exclude<keyof T, keyof U>]?: never };\ntype XOR<T, U> = T | U extends object ? (Without<T, U> & U) | (Without<U, T> & T) : T | U;\n\nexport type MenuItem = XOR<MenuItemLeafRoute, XOR<MenuItemLeafURL, XOR<MenuItemHeader, MenuItemNode>>>;\n\nexport type Menu = MenuItem[];\n","import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class AnchorService {\n  public iconClasses?: string;\n}\n","import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\n\nimport { NodeComponent } from './node.component';\n\n@Injectable()\nexport class NodeService {\n  public openedNode = new Subject<{ nodeComponent: NodeComponent; nodeLevel: number }>();\n  public toggleIconClasses?: string;\n}\n","import { Injectable } from '@angular/core';\n\nimport { BehaviorSubject, combineLatest, Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { UnAuthorizedVisibility } from '../sidebar-menu.interface';\n\nexport type Role = string | number;\n\n@Injectable()\nexport class RoleService {\n  private role$ = new BehaviorSubject<Role | undefined>(undefined);\n  private unAuthorizedVisibility$ = new BehaviorSubject<UnAuthorizedVisibility>('hidden');\n\n  set role(role: Role | undefined) {\n    this.role$.next(role);\n  }\n\n  set unAuthorizedVisibility(visibility: UnAuthorizedVisibility) {\n    this.unAuthorizedVisibility$.next(visibility);\n  }\n\n  showItem$(roles?: Role[]): Observable<boolean> {\n    return this.itemVisibilityBase$(roles).pipe(\n      map((values) => values.isAuthorized || (!values.isAuthorized && values.unAuthorizedVisibility !== 'hidden'))\n    );\n  }\n\n  disableItem$(roles?: Role[]): Observable<boolean> {\n    return this.itemVisibilityBase$(roles).pipe(\n      map((values) => !values.isAuthorized && values.unAuthorizedVisibility === 'disabled')\n    );\n  }\n\n  private itemVisibilityBase$(\n    roles?: Role[]\n  ): Observable<{ isAuthorized: boolean; unAuthorizedVisibility: UnAuthorizedVisibility }> {\n    return combineLatest([\n      this.role$.pipe(map((role) => this.isAuthorized(role, roles))),\n      this.unAuthorizedVisibility$,\n    ]).pipe(map((value) => ({ isAuthorized: value[0], unAuthorizedVisibility: value[1] })));\n  }\n\n  private isRole(role?: Role): boolean {\n    return typeof role === 'string' || typeof role === 'number';\n  }\n\n  private isAuthorized(userRole?: Role, itemRoles?: Role[]): boolean {\n    if (!this.isRole(userRole) || !itemRoles || itemRoles.length === 0) {\n      return true;\n    }\n\n    return (itemRoles as Role[]).includes(userRole as Role);\n  }\n}\n","import { Injectable } from '@angular/core';\n\nimport { Subject } from 'rxjs';\n\n@Injectable()\nexport class SearchService {\n  private _search = new Subject<string>();\n  public search$ = this._search.asObservable();\n\n  set search(value: string | undefined) {\n    this._search.next(value);\n  }\n\n  public filter(search?: string, label?: string): boolean {\n    if (!search || !label) {\n      return false;\n    }\n\n    return !label.toLowerCase().includes(search.toLowerCase());\n  }\n}\n","import { TrackByFunction } from '@angular/core';\n\nimport { MenuItem } from '../sidebar-menu.interface';\n\nexport const trackByItem: TrackByFunction<MenuItem> = (index, item) => {\n  return item.id || index;\n};\n","import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\n\nimport { Menu, Modes, UnAuthorizedVisibility } from './sidebar-menu.interface';\n\nimport { AnchorService } from './internal/anchor.service';\nimport { NodeService } from './internal/node.service';\nimport { RoleService, Role } from './internal/role.service';\nimport { SearchService } from './internal/search.service';\nimport { trackByItem } from './internal/utils';\n\n@Component({\n  selector: 'asm-angular-sidebar-menu',\n  styleUrls: ['sidebar-menu.component.scss'],\n  providers: [NodeService, AnchorService, RoleService, SearchService],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  template: ` <div class=\"asm-menu\" [ngClass]=\"'asm-menu--mode-' + mode\" [@.disabled]=\"disableAnimations\">\n    <ng-content></ng-content>\n    <ul class=\"asm-menu__node\">\n      <ng-container *ngFor=\"let item of menu; trackBy: trackByItem\">\n        <li\n          asm-menu-item\n          class=\"asm-menu-item asm-menu-item--root\"\n          *ngIf=\"roleService.showItem$(item.roles) | async\"\n          [menuItem]=\"item\"\n          [level]=\"0\"\n        ></li>\n      </ng-container>\n    </ul>\n  </div>`,\n})\nexport class SidebarMenuComponent {\n  @Input('menu') set _menu(menu: Menu) {\n    this.disableAnimations = true;\n    this.menu = menu;\n\n    setTimeout(() => {\n      this.disableAnimations = false;\n    });\n  }\n  @Input() set iconClasses(cssClasses: string) {\n    this.anchorService.iconClasses = cssClasses;\n  }\n  @Input() set toggleIconClasses(cssClasses: string) {\n    this.nodeService.toggleIconClasses = cssClasses;\n  }\n  @Input() set role(role: Role | undefined) {\n    this.roleService.role = role;\n  }\n  @Input() set unAuthorizedVisibility(visibility: UnAuthorizedVisibility) {\n    this.roleService.unAuthorizedVisibility = visibility;\n  }\n  @Input() set search(value: string | undefined) {\n    this.searchService.search = value;\n  }\n  @Input() mode = Modes.EXPANDED;\n\n  menu?: Menu;\n  modes = Modes;\n  disableAnimations = true;\n  trackByItem = trackByItem;\n\n  constructor(\n    private anchorService: AnchorService,\n    private nodeService: NodeService,\n    private searchService: SearchService,\n    public roleService: RoleService\n  ) {}\n}\n","import { animate, AUTO_STYLE, state, style, transition, trigger } from '@angular/animations';\n\nconst TRANSITION_DURATION = 300;\n\nexport const openCloseAnimation = trigger('openClose', [\n  state('true', style({ height: AUTO_STYLE })),\n  state('false', style({ height: 0 })),\n  transition('false <=> true', animate(`${TRANSITION_DURATION}ms ease-in`)),\n]);\n\nexport const rotateAnimation = trigger('rotate', [\n  state('true', style({ transform: 'rotate(-90deg)' })),\n  transition('false <=> true', animate(`${TRANSITION_DURATION}ms ease-out`)),\n]);\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  Input,\n  OnDestroy,\n  OnInit,\n  ChangeDetectorRef,\n  HostBinding,\n} from '@angular/core';\nimport { Event as RouterEvent, NavigationEnd, Router } from '@angular/router';\n\nimport { BehaviorSubject, Subject } from 'rxjs';\nimport { distinctUntilChanged, filter, takeUntil } from 'rxjs/operators';\n\nimport { MenuItem } from '../sidebar-menu.interface';\n\nimport { RoleService } from './role.service';\nimport { SearchService } from './search.service';\nimport { rotateAnimation } from './node.animations';\n\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'li[asm-menu-item][menuItem]',\n  animations: [rotateAnimation],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  template: `\n    <ng-container [ngSwitch]=\"true\">\n      <span *ngSwitchCase=\"!!menuItem.header\" class=\"asm-menu-item__header\">{{ menuItem.header }}</span>\n      <asm-menu-anchor\n        *ngSwitchCase=\"!menuItem.children && !menuItem.header\"\n        class=\"asm-menu-anchor\"\n        [menuItem]=\"menuItem\"\n        [disable]=\"disable || isItemDisabled\"\n      ></asm-menu-anchor>\n      <ng-container *ngSwitchCase=\"!!menuItem.children\">\n        <asm-menu-anchor\n          class=\"asm-menu-anchor\"\n          [ngClass]=\"{ 'asm-menu-anchor--open': node.isOpen }\"\n          [menuItem]=\"menuItem\"\n          (clickAnchor)=\"node.onNodeToggleClick()\"\n          [isActive]=\"node.isActiveChild\"\n          ><i toggleIcon [@rotate]=\"node.isOpen\" [class]=\"node.nodeService.toggleIconClasses\"></i\n        ></asm-menu-anchor>\n        <asm-menu-node\n          #node\n          class=\"asm-menu-node\"\n          [menuItem]=\"menuItem\"\n          [level]=\"level\"\n          [disable]=\"disable || isItemDisabled\"\n          (isActive)=\"onNodeActive($event)\"\n          (isFiltered)=\"onNodeFiltered($event)\"\n        ></asm-menu-node>\n      </ng-container>\n    </ng-container>\n  `,\n})\nexport class ItemComponent implements OnInit, OnDestroy {\n  @Input() menuItem!: MenuItem;\n  @Input() isRootNode = true;\n  @Input() level!: number;\n  @Input() disable = false;\n\n  @HostBinding('class.asm-menu-item--filtered') get filtered(): boolean {\n    return this.isItemFiltered;\n  }\n  @HostBinding('class.asm-menu-item--disabled') get disabled(): boolean {\n    return this.isItemDisabled || this.disable;\n  }\n\n  private onDestroy$ = new Subject();\n  private isActive = new BehaviorSubject(false);\n  private isFiltered = new BehaviorSubject(false);\n\n  isActive$ = this.isActive.asObservable().pipe(distinctUntilChanged(), takeUntil(this.onDestroy$));\n  isFiltered$ = this.isFiltered.asObservable().pipe(distinctUntilChanged(), takeUntil(this.onDestroy$));\n  isItemFiltered = false;\n  isItemDisabled = false;\n\n  constructor(\n    private router: Router,\n    public roleService: RoleService,\n    private searchService: SearchService,\n    private changeDetectorRef: ChangeDetectorRef\n  ) {}\n\n  ngOnInit(): void {\n    this.routerItemActiveSubscription();\n    this.emitItemActive();\n    this.menuSearchSubscription();\n    this.disabledItemSubscription();\n  }\n\n  ngOnDestroy(): void {\n    this.onDestroy$.next();\n    this.onDestroy$.complete();\n  }\n\n  onNodeActive(event: boolean): void {\n    this.isActive.next(event);\n  }\n\n  onNodeFiltered(event: boolean): void {\n    this.isItemFiltered = event;\n    this.isFiltered.next(event);\n  }\n\n  private routerItemActiveSubscription(): void {\n    this.router.events\n      .pipe(\n        filter((e: RouterEvent): e is NavigationEnd => e instanceof NavigationEnd),\n        takeUntil(this.onDestroy$)\n      )\n      .subscribe((e) => {\n        this.emitItemActive();\n      });\n  }\n\n  private menuSearchSubscription(): void {\n    if (!this.menuItem.children) {\n      this.searchService.search$.pipe(takeUntil(this.onDestroy$)).subscribe((search) => {\n        this.isItemFiltered = this.searchService.filter(search, this.menuItem.label || this.menuItem.header);\n        this.isFiltered.next(this.isItemFiltered);\n        this.changeDetectorRef.markForCheck();\n      });\n    }\n  }\n\n  private disabledItemSubscription(): void {\n    this.roleService\n      .disableItem$(this.menuItem.roles)\n      .pipe(takeUntil(this.onDestroy$))\n      .subscribe((disabled) => (this.isItemDisabled = disabled));\n  }\n\n  private emitItemActive(): void {\n    if (this.menuItem.route) {\n      this.isActive.next(this.isActiveRoute(this.menuItem.route));\n    }\n  }\n\n  private isActiveRoute(route: string): boolean {\n    return this.router.isActive(route, this.isItemLinkExact());\n  }\n\n  private isItemLinkExact(): boolean {\n    return this.menuItem.linkActiveExact === undefined ? true : this.menuItem.linkActiveExact;\n  }\n}\n","import {\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  EventEmitter,\n  HostBinding,\n  Input,\n  OnDestroy,\n  Output,\n  QueryList,\n  ViewChildren,\n} from '@angular/core';\n\nimport { combineLatest, Subject } from 'rxjs';\nimport { filter, takeUntil } from 'rxjs/operators';\n\nimport { MenuItem } from '../sidebar-menu.interface';\n\nimport { NodeService } from './node.service';\nimport { RoleService } from './role.service';\nimport { openCloseAnimation } from './node.animations';\nimport { ItemComponent } from './item.component';\nimport { trackByItem } from './utils';\n\n@Component({\n  selector: 'asm-menu-node',\n  animations: [openCloseAnimation],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  template: `<ul [@openClose]=\"isOpen\">\n    <li *ngIf=\"level === 0\" class=\"asm-menu-item\">\n      <span class=\"asm-menu-node__label\">{{ menuItem.label }}</span>\n    </li>\n    <ng-container *ngFor=\"let childItem of menuItem.children; trackBy: trackByItem\">\n      <li\n        asm-menu-item\n        class=\"asm-menu-item\"\n        *ngIf=\"roleService.showItem$(childItem.roles) | async\"\n        [menuItem]=\"childItem\"\n        [level]=\"level + 1\"\n        [disable]=\"disable\"\n      ></li>\n    </ng-container>\n  </ul>`,\n})\nexport class NodeComponent implements AfterViewInit, OnDestroy {\n  @Input() menuItem!: MenuItem;\n  @Input() level!: number;\n  @Input() disable = false;\n\n  @Output() isActive = new EventEmitter<boolean>();\n  @Output() isFiltered = new EventEmitter<boolean>();\n\n  @HostBinding('class.asm-menu-node--open') get open(): boolean {\n    return this.isOpen;\n  }\n\n  @ViewChildren(ItemComponent) private menuItemComponents!: QueryList<ItemComponent>;\n\n  isOpen = false;\n  isActiveChild = false;\n  trackByItem = trackByItem;\n\n  private onDestroy$ = new Subject();\n\n  constructor(\n    public nodeService: NodeService,\n    public roleService: RoleService,\n    private changeDetectorRef: ChangeDetectorRef\n  ) {}\n\n  ngAfterViewInit(): void {\n    this.openedNodeSubscription();\n    this.activeItemsSubscription();\n    this.filterItemsSubscription();\n  }\n\n  ngOnDestroy(): void {\n    this.onDestroy$.next();\n    this.onDestroy$.complete();\n  }\n\n  onNodeToggleClick(): void {\n    this.isOpen = !this.isOpen;\n    this.nodeService.openedNode.next({ nodeComponent: this, nodeLevel: this.level });\n    this.changeDetectorRef.markForCheck();\n  }\n\n  private activeItemsSubscription(): void {\n    const isChildrenItemsActive = this.menuItemComponents.map((item) => item.isActive$);\n\n    if (isChildrenItemsActive && isChildrenItemsActive.length) {\n      combineLatest(isChildrenItemsActive)\n        .pipe(takeUntil(this.onDestroy$))\n        .subscribe((itemsActiveState) => {\n          this.isOpen = this.isActiveChild = itemsActiveState.includes(true);\n          this.isActive.emit(this.isOpen);\n        });\n    }\n  }\n\n  private filterItemsSubscription(): void {\n    const isChildrenItemsFiltered = this.menuItemComponents.map((item) => item.isFiltered$);\n\n    if (isChildrenItemsFiltered && isChildrenItemsFiltered.length) {\n      combineLatest(isChildrenItemsFiltered)\n        .pipe(takeUntil(this.onDestroy$))\n        .subscribe((itemsFilteredState) => {\n          const isItemsFiltered = itemsFilteredState.includes(false) === false;\n          this.isFiltered.emit(isItemsFiltered);\n        });\n    }\n  }\n\n  private openedNodeSubscription(): void {\n    this.nodeService.openedNode\n      .pipe(\n        filter(() => !!this.isOpen),\n        filter((node) => node.nodeComponent !== this),\n        takeUntil(this.onDestroy$)\n      )\n      .subscribe((node) => {\n        if (node.nodeLevel <= this.level) {\n          this.isOpen = false;\n          this.changeDetectorRef.markForCheck();\n        }\n      });\n  }\n}\n","import { Component, Input, Output, EventEmitter, ChangeDetectionStrategy, HostBinding, ViewChild } from '@angular/core';\nimport { RouterLinkActive } from '@angular/router';\n\nimport { MenuItem } from '../sidebar-menu.interface';\n\nimport { AnchorService } from './anchor.service';\n\n@Component({\n  selector: 'asm-menu-anchor',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  template: `<ng-container [ngSwitch]=\"true\">\n      <a *ngSwitchCase=\"!!menuItem.children\" (click)=\"clickAnchor.emit()\">\n        <ng-container *ngTemplateOutlet=\"innerItem\"></ng-container>\n      </a>\n      <a\n        *ngSwitchCase=\"!!menuItem.route || menuItem.route === ''\"\n        [routerLink]=\"disable ? undefined : menuItem.route\"\n        routerLinkActive\n        #rla=\"routerLinkActive\"\n        [routerLinkActiveOptions]=\"{ exact: menuItem.linkActiveExact === undefined ? true : menuItem.linkActiveExact }\"\n      >\n        <ng-container *ngTemplateOutlet=\"innerItem\"></ng-container>\n      </a>\n      <a *ngSwitchCase=\"!!menuItem.url\" [href]=\"menuItem.url\" [target]=\"menuItem.target\">\n        <ng-container *ngTemplateOutlet=\"innerItem\"></ng-container>\n      </a>\n    </ng-container>\n\n    <ng-template #innerItem>\n      <i\n        *ngIf=\"menuItem.iconClasses || anchorService.iconClasses\"\n        [class]=\"menuItem.iconClasses || anchorService.iconClasses\"\n        class=\"asm-menu-anchor__icon\"\n      ></i>\n      <span class=\"asm-menu-anchor__label\">{{ menuItem.label }}</span>\n      <span\n        *ngIf=\"menuItem.badges || menuItem.children\"\n        class=\"asm-menu-anchor__pull\"\n        [ngClass]=\"{ 'asm-badges': menuItem.badges, 'asm-toggle': menuItem.children }\"\n      >\n        <span *ngFor=\"let badge of menuItem.badges\" [class]=\"badge.classes\" class=\"asm-badges__badge\">{{\n          badge.label\n        }}</span>\n        <span class=\"asm-toggle__icon\"><ng-content select=\"[toggleIcon]\"></ng-content></span>\n      </span>\n    </ng-template>`,\n})\nexport class AnchorComponent {\n  @Input() menuItem!: MenuItem;\n  @Input() isActive?: boolean;\n  @Input() disable = false;\n\n  @Output() clickAnchor = new EventEmitter<void>();\n\n  @HostBinding('class.asm-menu-anchor--active') get active(): boolean {\n    return this.isActive || (!!this.routerLinActive?.isActive && !this.disable);\n  }\n\n  @ViewChild('rla') private routerLinActive?: RouterLinkActive;\n\n  constructor(public anchorService: AnchorService) {}\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\n\nimport { SidebarMenuComponent } from './sidebar-menu.component';\n\nimport { ItemComponent } from './internal/item.component';\nimport { NodeComponent } from './internal/node.component';\nimport { AnchorComponent } from './internal/anchor.component';\n\n@NgModule({\n  declarations: [SidebarMenuComponent, ItemComponent, NodeComponent, AnchorComponent],\n  imports: [RouterModule, CommonModule],\n  exports: [SidebarMenuComponent],\n})\nexport class SidebarMenuModule {}\n","/*\n * Public API Surface of angular-sidebar-menu\n */\n\nexport * from './lib/sidebar-menu.component';\nexport * from './lib/sidebar-menu.module';\nexport * from './lib/sidebar-menu.interface';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n\nexport {AnchorComponent as ɵi} from './lib/internal/anchor.component';\nexport {AnchorService as ɵb} from './lib/internal/anchor.service';\nexport {ItemComponent as ɵe} from './lib/internal/item.component';\nexport {openCloseAnimation as ɵf,rotateAnimation as ɵg} from './lib/internal/node.animations';\nexport {NodeComponent as ɵh} from './lib/internal/node.component';\nexport {NodeService as ɵa} from './lib/internal/node.service';\nexport {RoleService as ɵc} from './lib/internal/role.service';\nexport {SearchService as ɵd} from './lib/internal/search.service';"],"names":[],"mappings":"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"}