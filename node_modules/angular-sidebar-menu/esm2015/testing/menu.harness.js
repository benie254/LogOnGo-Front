import { __awaiter } from "tslib";
import { ComponentHarness } from '@angular/cdk/testing';
import { HarnessPredicate } from '@angular/cdk/testing';
class MenuItemHarness extends ComponentHarness {
    constructor() {
        super(...arguments);
        this.getLabelElement = this.locatorFor('.asm-menu-anchor__label, .asm-menu-item__header');
        this.getLinkElement = this.locatorFor('asm-menu-anchor a');
        this.getBadgesElement = this.locatorForAll('.asm-badges__badge');
    }
    static with(options) {
        return new HarnessPredicate(MenuItemHarness, options).addOption('label', options.label, (harness, label) => HarnessPredicate.stringMatches(harness.getItemLabel(), label));
    }
    getItemLabel() {
        return __awaiter(this, void 0, void 0, function* () {
            const el = yield this.getLabelElement();
            return el.text();
        });
    }
    isFiltered() {
        return __awaiter(this, void 0, void 0, function* () {
            const el = yield this.host();
            return el.hasClass('asm-menu-item--filtered');
        });
    }
}
MenuItemHarness.hostSelector = '[asm-menu-item]';
export class MenuHarness extends ComponentHarness {
    constructor() {
        super(...arguments);
        this.getItems = this.locatorForAll(MenuItemHarness);
        this.getItemsHeaders = this.locatorForAll('.asm-menu-item__header');
        this.getItemsWithIcons = this.locatorForAll('.asm-menu-anchor__icon');
        this.getItemsWithBadges = this.locatorForAll('.asm-badges');
        this.getActivatedAnchors = this.locatorForAll('.asm-menu-anchor--active');
        this.getActivatedAnchorsLabels = this.locatorForAll('.asm-menu-anchor--active .asm-menu-anchor__label');
        this.getOpenedNodes = this.locatorForAll('.asm-menu-node--open');
        this.getOpenedNodesLabels = this.locatorForAll('.asm-menu-anchor--open .asm-menu-anchor__label');
        this.getDisabledItems = this.locatorForAll('.asm-menu-item--disabled');
        this.getFilteredItems = this.locatorForAll('.asm-menu-item--filtered');
    }
    getItemsWith(filters = {}) {
        return __awaiter(this, void 0, void 0, function* () {
            const getFilteredItems = this.locatorForAll(MenuItemHarness.with(filters));
            return getFilteredItems();
        });
    }
    getItemWith(filters = {}) {
        return __awaiter(this, void 0, void 0, function* () {
            const getFilteredItem = this.locatorFor(MenuItemHarness.with(filters));
            return getFilteredItem();
        });
    }
    clickItemWith(filters = {}) {
        return __awaiter(this, void 0, void 0, function* () {
            const item = yield this.getItemWith(filters);
            return (yield item.getLinkElement()).click();
        });
    }
}
MenuHarness.hostSelector = 'asm-angular-sidebar-menu';
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWVudS5oYXJuZXNzLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vbGlicmFyeS90ZXN0aW5nL3NyYy9tZW51Lmhhcm5lc3MudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLE9BQU8sRUFBRSxnQkFBZ0IsRUFBRSxNQUFNLHNCQUFzQixDQUFDO0FBQ3hELE9BQU8sRUFBc0IsZ0JBQWdCLEVBQUUsTUFBTSxzQkFBc0IsQ0FBQztBQU01RSxNQUFNLGVBQWdCLFNBQVEsZ0JBQWdCO0lBQTlDOztRQUdFLG9CQUFlLEdBQUcsSUFBSSxDQUFDLFVBQVUsQ0FBQyxpREFBaUQsQ0FBQyxDQUFDO1FBQ3JGLG1CQUFjLEdBQUcsSUFBSSxDQUFDLFVBQVUsQ0FBQyxtQkFBbUIsQ0FBQyxDQUFDO1FBQ3RELHFCQUFnQixHQUFHLElBQUksQ0FBQyxhQUFhLENBQUMsb0JBQW9CLENBQUMsQ0FBQztJQWlCOUQsQ0FBQztJQWZDLE1BQU0sQ0FBQyxJQUFJLENBQUMsT0FBK0I7UUFDekMsT0FBTyxJQUFJLGdCQUFnQixDQUFDLGVBQWUsRUFBRSxPQUFPLENBQUMsQ0FBQyxTQUFTLENBQUMsT0FBTyxFQUFFLE9BQU8sQ0FBQyxLQUFLLEVBQUUsQ0FBQyxPQUFPLEVBQUUsS0FBSyxFQUFFLEVBQUUsQ0FDekcsZ0JBQWdCLENBQUMsYUFBYSxDQUFDLE9BQU8sQ0FBQyxZQUFZLEVBQUUsRUFBRSxLQUFLLENBQUMsQ0FDOUQsQ0FBQztJQUNKLENBQUM7SUFFSyxZQUFZOztZQUNoQixNQUFNLEVBQUUsR0FBRyxNQUFNLElBQUksQ0FBQyxlQUFlLEVBQUUsQ0FBQztZQUN4QyxPQUFPLEVBQUUsQ0FBQyxJQUFJLEVBQUUsQ0FBQztRQUNuQixDQUFDO0tBQUE7SUFFSyxVQUFVOztZQUNkLE1BQU0sRUFBRSxHQUFHLE1BQU0sSUFBSSxDQUFDLElBQUksRUFBRSxDQUFDO1lBQzdCLE9BQU8sRUFBRSxDQUFDLFFBQVEsQ0FBQyx5QkFBeUIsQ0FBQyxDQUFDO1FBQ2hELENBQUM7S0FBQTs7QUFwQk0sNEJBQVksR0FBRyxpQkFBaUIsQ0FBQztBQXVCMUMsTUFBTSxPQUFPLFdBQVksU0FBUSxnQkFBZ0I7SUFBakQ7O1FBR0UsYUFBUSxHQUFHLElBQUksQ0FBQyxhQUFhLENBQUMsZUFBZSxDQUFDLENBQUM7UUFDL0Msb0JBQWUsR0FBRyxJQUFJLENBQUMsYUFBYSxDQUFDLHdCQUF3QixDQUFDLENBQUM7UUFDL0Qsc0JBQWlCLEdBQUcsSUFBSSxDQUFDLGFBQWEsQ0FBQyx3QkFBd0IsQ0FBQyxDQUFDO1FBQ2pFLHVCQUFrQixHQUFHLElBQUksQ0FBQyxhQUFhLENBQUMsYUFBYSxDQUFDLENBQUM7UUFDdkQsd0JBQW1CLEdBQUcsSUFBSSxDQUFDLGFBQWEsQ0FBQywwQkFBMEIsQ0FBQyxDQUFDO1FBQ3JFLDhCQUF5QixHQUFHLElBQUksQ0FBQyxhQUFhLENBQUMsa0RBQWtELENBQUMsQ0FBQztRQUNuRyxtQkFBYyxHQUFHLElBQUksQ0FBQyxhQUFhLENBQUMsc0JBQXNCLENBQUMsQ0FBQztRQUM1RCx5QkFBb0IsR0FBRyxJQUFJLENBQUMsYUFBYSxDQUFDLGdEQUFnRCxDQUFDLENBQUM7UUFDNUYscUJBQWdCLEdBQUcsSUFBSSxDQUFDLGFBQWEsQ0FBQywwQkFBMEIsQ0FBQyxDQUFDO1FBQ2xFLHFCQUFnQixHQUFHLElBQUksQ0FBQyxhQUFhLENBQUMsMEJBQTBCLENBQUMsQ0FBQztJQWdCcEUsQ0FBQztJQWRPLFlBQVksQ0FBQyxVQUFrQyxFQUFFOztZQUNyRCxNQUFNLGdCQUFnQixHQUFHLElBQUksQ0FBQyxhQUFhLENBQUMsZUFBZSxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDO1lBQzNFLE9BQU8sZ0JBQWdCLEVBQUUsQ0FBQztRQUM1QixDQUFDO0tBQUE7SUFFSyxXQUFXLENBQUMsVUFBa0MsRUFBRTs7WUFDcEQsTUFBTSxlQUFlLEdBQUcsSUFBSSxDQUFDLFVBQVUsQ0FBQyxlQUFlLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxDQUFDLENBQUM7WUFDdkUsT0FBTyxlQUFlLEVBQUUsQ0FBQztRQUMzQixDQUFDO0tBQUE7SUFFSyxhQUFhLENBQUMsVUFBa0MsRUFBRTs7WUFDdEQsTUFBTSxJQUFJLEdBQUcsTUFBTSxJQUFJLENBQUMsV0FBVyxDQUFDLE9BQU8sQ0FBQyxDQUFDO1lBQzdDLE9BQU8sQ0FBQyxNQUFNLElBQUksQ0FBQyxjQUFjLEVBQUUsQ0FBQyxDQUFDLEtBQUssRUFBRSxDQUFDO1FBQy9DLENBQUM7S0FBQTs7QUExQk0sd0JBQVksR0FBRywwQkFBMEIsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudEhhcm5lc3MgfSBmcm9tICdAYW5ndWxhci9jZGsvdGVzdGluZyc7XG5pbXBvcnQgeyBCYXNlSGFybmVzc0ZpbHRlcnMsIEhhcm5lc3NQcmVkaWNhdGUgfSBmcm9tICdAYW5ndWxhci9jZGsvdGVzdGluZyc7XG5cbmludGVyZmFjZSBNZW51SXRlbUhhcm5lc3NGaWx0ZXJzIGV4dGVuZHMgQmFzZUhhcm5lc3NGaWx0ZXJzIHtcbiAgbGFiZWw/OiBzdHJpbmcgfCBSZWdFeHA7XG59XG5cbmNsYXNzIE1lbnVJdGVtSGFybmVzcyBleHRlbmRzIENvbXBvbmVudEhhcm5lc3Mge1xuICBzdGF0aWMgaG9zdFNlbGVjdG9yID0gJ1thc20tbWVudS1pdGVtXSc7XG5cbiAgZ2V0TGFiZWxFbGVtZW50ID0gdGhpcy5sb2NhdG9yRm9yKCcuYXNtLW1lbnUtYW5jaG9yX19sYWJlbCwgLmFzbS1tZW51LWl0ZW1fX2hlYWRlcicpO1xuICBnZXRMaW5rRWxlbWVudCA9IHRoaXMubG9jYXRvckZvcignYXNtLW1lbnUtYW5jaG9yIGEnKTtcbiAgZ2V0QmFkZ2VzRWxlbWVudCA9IHRoaXMubG9jYXRvckZvckFsbCgnLmFzbS1iYWRnZXNfX2JhZGdlJyk7XG5cbiAgc3RhdGljIHdpdGgob3B0aW9uczogTWVudUl0ZW1IYXJuZXNzRmlsdGVycyk6IEhhcm5lc3NQcmVkaWNhdGU8TWVudUl0ZW1IYXJuZXNzPiB7XG4gICAgcmV0dXJuIG5ldyBIYXJuZXNzUHJlZGljYXRlKE1lbnVJdGVtSGFybmVzcywgb3B0aW9ucykuYWRkT3B0aW9uKCdsYWJlbCcsIG9wdGlvbnMubGFiZWwsIChoYXJuZXNzLCBsYWJlbCkgPT5cbiAgICAgIEhhcm5lc3NQcmVkaWNhdGUuc3RyaW5nTWF0Y2hlcyhoYXJuZXNzLmdldEl0ZW1MYWJlbCgpLCBsYWJlbClcbiAgICApO1xuICB9XG5cbiAgYXN5bmMgZ2V0SXRlbUxhYmVsKCk6IFByb21pc2U8c3RyaW5nPiB7XG4gICAgY29uc3QgZWwgPSBhd2FpdCB0aGlzLmdldExhYmVsRWxlbWVudCgpO1xuICAgIHJldHVybiBlbC50ZXh0KCk7XG4gIH1cblxuICBhc3luYyBpc0ZpbHRlcmVkKCk6IFByb21pc2U8Ym9vbGVhbj4ge1xuICAgIGNvbnN0IGVsID0gYXdhaXQgdGhpcy5ob3N0KCk7XG4gICAgcmV0dXJuIGVsLmhhc0NsYXNzKCdhc20tbWVudS1pdGVtLS1maWx0ZXJlZCcpO1xuICB9XG59XG5cbmV4cG9ydCBjbGFzcyBNZW51SGFybmVzcyBleHRlbmRzIENvbXBvbmVudEhhcm5lc3Mge1xuICBzdGF0aWMgaG9zdFNlbGVjdG9yID0gJ2FzbS1hbmd1bGFyLXNpZGViYXItbWVudSc7XG5cbiAgZ2V0SXRlbXMgPSB0aGlzLmxvY2F0b3JGb3JBbGwoTWVudUl0ZW1IYXJuZXNzKTtcbiAgZ2V0SXRlbXNIZWFkZXJzID0gdGhpcy5sb2NhdG9yRm9yQWxsKCcuYXNtLW1lbnUtaXRlbV9faGVhZGVyJyk7XG4gIGdldEl0ZW1zV2l0aEljb25zID0gdGhpcy5sb2NhdG9yRm9yQWxsKCcuYXNtLW1lbnUtYW5jaG9yX19pY29uJyk7XG4gIGdldEl0ZW1zV2l0aEJhZGdlcyA9IHRoaXMubG9jYXRvckZvckFsbCgnLmFzbS1iYWRnZXMnKTtcbiAgZ2V0QWN0aXZhdGVkQW5jaG9ycyA9IHRoaXMubG9jYXRvckZvckFsbCgnLmFzbS1tZW51LWFuY2hvci0tYWN0aXZlJyk7XG4gIGdldEFjdGl2YXRlZEFuY2hvcnNMYWJlbHMgPSB0aGlzLmxvY2F0b3JGb3JBbGwoJy5hc20tbWVudS1hbmNob3ItLWFjdGl2ZSAuYXNtLW1lbnUtYW5jaG9yX19sYWJlbCcpO1xuICBnZXRPcGVuZWROb2RlcyA9IHRoaXMubG9jYXRvckZvckFsbCgnLmFzbS1tZW51LW5vZGUtLW9wZW4nKTtcbiAgZ2V0T3BlbmVkTm9kZXNMYWJlbHMgPSB0aGlzLmxvY2F0b3JGb3JBbGwoJy5hc20tbWVudS1hbmNob3ItLW9wZW4gLmFzbS1tZW51LWFuY2hvcl9fbGFiZWwnKTtcbiAgZ2V0RGlzYWJsZWRJdGVtcyA9IHRoaXMubG9jYXRvckZvckFsbCgnLmFzbS1tZW51LWl0ZW0tLWRpc2FibGVkJyk7XG4gIGdldEZpbHRlcmVkSXRlbXMgPSB0aGlzLmxvY2F0b3JGb3JBbGwoJy5hc20tbWVudS1pdGVtLS1maWx0ZXJlZCcpO1xuXG4gIGFzeW5jIGdldEl0ZW1zV2l0aChmaWx0ZXJzOiBNZW51SXRlbUhhcm5lc3NGaWx0ZXJzID0ge30pOiBQcm9taXNlPE1lbnVJdGVtSGFybmVzc1tdPiB7XG4gICAgY29uc3QgZ2V0RmlsdGVyZWRJdGVtcyA9IHRoaXMubG9jYXRvckZvckFsbChNZW51SXRlbUhhcm5lc3Mud2l0aChmaWx0ZXJzKSk7XG4gICAgcmV0dXJuIGdldEZpbHRlcmVkSXRlbXMoKTtcbiAgfVxuXG4gIGFzeW5jIGdldEl0ZW1XaXRoKGZpbHRlcnM6IE1lbnVJdGVtSGFybmVzc0ZpbHRlcnMgPSB7fSk6IFByb21pc2U8TWVudUl0ZW1IYXJuZXNzPiB7XG4gICAgY29uc3QgZ2V0RmlsdGVyZWRJdGVtID0gdGhpcy5sb2NhdG9yRm9yKE1lbnVJdGVtSGFybmVzcy53aXRoKGZpbHRlcnMpKTtcbiAgICByZXR1cm4gZ2V0RmlsdGVyZWRJdGVtKCk7XG4gIH1cblxuICBhc3luYyBjbGlja0l0ZW1XaXRoKGZpbHRlcnM6IE1lbnVJdGVtSGFybmVzc0ZpbHRlcnMgPSB7fSk6IFByb21pc2U8dm9pZD4ge1xuICAgIGNvbnN0IGl0ZW0gPSBhd2FpdCB0aGlzLmdldEl0ZW1XaXRoKGZpbHRlcnMpO1xuICAgIHJldHVybiAoYXdhaXQgaXRlbS5nZXRMaW5rRWxlbWVudCgpKS5jbGljaygpO1xuICB9XG59XG4iXX0=