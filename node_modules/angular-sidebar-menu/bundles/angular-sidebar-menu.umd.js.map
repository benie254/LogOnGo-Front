{"version":3,"file":"angular-sidebar-menu.umd.js","sources":["../../../library/src/lib/sidebar-menu.interface.ts","../../../library/src/lib/internal/anchor.service.ts","../../../library/src/lib/internal/node.service.ts","../../../library/src/lib/internal/role.service.ts","../../../library/src/lib/internal/search.service.ts","../../../library/src/lib/internal/utils.ts","../../../library/src/lib/sidebar-menu.component.ts","../../../library/src/lib/internal/node.animations.ts","../../../library/src/lib/internal/item.component.ts","../../../library/src/lib/internal/node.component.ts","../../../library/src/lib/internal/anchor.component.ts","../../../library/src/lib/sidebar-menu.module.ts","../../../library/src/public-api.ts","../../../library/src/angular-sidebar-menu.ts"],"sourcesContent":["import { Role } from './internal/role.service';\n\nexport type UnAuthorizedVisibility = 'hidden' | 'disabled';\n\nexport enum Modes {\n  EXPANDED = 'expanded',\n  EXPANDABLE = 'expandable',\n  MINI = 'mini',\n}\n\ntype MenuItemID = number | string;\n\nexport interface MenuItemBadge {\n  label: string;\n  classes: string;\n}\n\nexport interface MenuItemBase {\n  id?: MenuItemID;\n  label: string;\n  iconClasses?: string;\n  badges?: MenuItemBadge[];\n  roles?: Role[];\n}\n\nexport interface MenuItemLeafRoute extends MenuItemBase {\n  route: string;\n  linkActiveExact?: boolean;\n}\n\nexport interface MenuItemLeafURL extends MenuItemBase {\n  url: string;\n  target?: string;\n}\n\nexport interface MenuItemHeader {\n  id?: MenuItemID;\n  header: string;\n}\n\nexport interface MenuItemNode extends MenuItemBase {\n  children: MenuItem[];\n}\n\ntype Without<T, U> = { [P in Exclude<keyof T, keyof U>]?: never };\ntype XOR<T, U> = T | U extends object ? (Without<T, U> & U) | (Without<U, T> & T) : T | U;\n\nexport type MenuItem = XOR<MenuItemLeafRoute, XOR<MenuItemLeafURL, XOR<MenuItemHeader, MenuItemNode>>>;\n\nexport type Menu = MenuItem[];\n","import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class AnchorService {\n  public iconClasses?: string;\n}\n","import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\n\nimport { NodeComponent } from './node.component';\n\n@Injectable()\nexport class NodeService {\n  public openedNode = new Subject<{ nodeComponent: NodeComponent; nodeLevel: number }>();\n  public toggleIconClasses?: string;\n}\n","import { Injectable } from '@angular/core';\n\nimport { BehaviorSubject, combineLatest, Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { UnAuthorizedVisibility } from '../sidebar-menu.interface';\n\nexport type Role = string | number;\n\n@Injectable()\nexport class RoleService {\n  private role$ = new BehaviorSubject<Role | undefined>(undefined);\n  private unAuthorizedVisibility$ = new BehaviorSubject<UnAuthorizedVisibility>('hidden');\n\n  set role(role: Role | undefined) {\n    this.role$.next(role);\n  }\n\n  set unAuthorizedVisibility(visibility: UnAuthorizedVisibility) {\n    this.unAuthorizedVisibility$.next(visibility);\n  }\n\n  showItem$(roles?: Role[]): Observable<boolean> {\n    return this.itemVisibilityBase$(roles).pipe(\n      map((values) => values.isAuthorized || (!values.isAuthorized && values.unAuthorizedVisibility !== 'hidden'))\n    );\n  }\n\n  disableItem$(roles?: Role[]): Observable<boolean> {\n    return this.itemVisibilityBase$(roles).pipe(\n      map((values) => !values.isAuthorized && values.unAuthorizedVisibility === 'disabled')\n    );\n  }\n\n  private itemVisibilityBase$(\n    roles?: Role[]\n  ): Observable<{ isAuthorized: boolean; unAuthorizedVisibility: UnAuthorizedVisibility }> {\n    return combineLatest([\n      this.role$.pipe(map((role) => this.isAuthorized(role, roles))),\n      this.unAuthorizedVisibility$,\n    ]).pipe(map((value) => ({ isAuthorized: value[0], unAuthorizedVisibility: value[1] })));\n  }\n\n  private isRole(role?: Role): boolean {\n    return typeof role === 'string' || typeof role === 'number';\n  }\n\n  private isAuthorized(userRole?: Role, itemRoles?: Role[]): boolean {\n    if (!this.isRole(userRole) || !itemRoles || itemRoles.length === 0) {\n      return true;\n    }\n\n    return (itemRoles as Role[]).includes(userRole as Role);\n  }\n}\n","import { Injectable } from '@angular/core';\n\nimport { Subject } from 'rxjs';\n\n@Injectable()\nexport class SearchService {\n  private _search = new Subject<string>();\n  public search$ = this._search.asObservable();\n\n  set search(value: string | undefined) {\n    this._search.next(value);\n  }\n\n  public filter(search?: string, label?: string): boolean {\n    if (!search || !label) {\n      return false;\n    }\n\n    return !label.toLowerCase().includes(search.toLowerCase());\n  }\n}\n","import { TrackByFunction } from '@angular/core';\n\nimport { MenuItem } from '../sidebar-menu.interface';\n\nexport const trackByItem: TrackByFunction<MenuItem> = (index, item) => {\n  return item.id || index;\n};\n","import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\n\nimport { Menu, Modes, UnAuthorizedVisibility } from './sidebar-menu.interface';\n\nimport { AnchorService } from './internal/anchor.service';\nimport { NodeService } from './internal/node.service';\nimport { RoleService, Role } from './internal/role.service';\nimport { SearchService } from './internal/search.service';\nimport { trackByItem } from './internal/utils';\n\n@Component({\n  selector: 'asm-angular-sidebar-menu',\n  styleUrls: ['sidebar-menu.component.scss'],\n  providers: [NodeService, AnchorService, RoleService, SearchService],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  template: ` <div class=\"asm-menu\" [ngClass]=\"'asm-menu--mode-' + mode\" [@.disabled]=\"disableAnimations\">\n    <ng-content></ng-content>\n    <ul class=\"asm-menu__node\">\n      <ng-container *ngFor=\"let item of menu; trackBy: trackByItem\">\n        <li\n          asm-menu-item\n          class=\"asm-menu-item asm-menu-item--root\"\n          *ngIf=\"roleService.showItem$(item.roles) | async\"\n          [menuItem]=\"item\"\n          [level]=\"0\"\n        ></li>\n      </ng-container>\n    </ul>\n  </div>`,\n})\nexport class SidebarMenuComponent {\n  @Input('menu') set _menu(menu: Menu) {\n    this.disableAnimations = true;\n    this.menu = menu;\n\n    setTimeout(() => {\n      this.disableAnimations = false;\n    });\n  }\n  @Input() set iconClasses(cssClasses: string) {\n    this.anchorService.iconClasses = cssClasses;\n  }\n  @Input() set toggleIconClasses(cssClasses: string) {\n    this.nodeService.toggleIconClasses = cssClasses;\n  }\n  @Input() set role(role: Role | undefined) {\n    this.roleService.role = role;\n  }\n  @Input() set unAuthorizedVisibility(visibility: UnAuthorizedVisibility) {\n    this.roleService.unAuthorizedVisibility = visibility;\n  }\n  @Input() set search(value: string | undefined) {\n    this.searchService.search = value;\n  }\n  @Input() mode = Modes.EXPANDED;\n\n  menu?: Menu;\n  modes = Modes;\n  disableAnimations = true;\n  trackByItem = trackByItem;\n\n  constructor(\n    private anchorService: AnchorService,\n    private nodeService: NodeService,\n    private searchService: SearchService,\n    public roleService: RoleService\n  ) {}\n}\n","import { animate, AUTO_STYLE, state, style, transition, trigger } from '@angular/animations';\n\nconst TRANSITION_DURATION = 300;\n\nexport const openCloseAnimation = trigger('openClose', [\n  state('true', style({ height: AUTO_STYLE })),\n  state('false', style({ height: 0 })),\n  transition('false <=> true', animate(`${TRANSITION_DURATION}ms ease-in`)),\n]);\n\nexport const rotateAnimation = trigger('rotate', [\n  state('true', style({ transform: 'rotate(-90deg)' })),\n  transition('false <=> true', animate(`${TRANSITION_DURATION}ms ease-out`)),\n]);\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  Input,\n  OnDestroy,\n  OnInit,\n  ChangeDetectorRef,\n  HostBinding,\n} from '@angular/core';\nimport { Event as RouterEvent, NavigationEnd, Router } from '@angular/router';\n\nimport { BehaviorSubject, Subject } from 'rxjs';\nimport { distinctUntilChanged, filter, takeUntil } from 'rxjs/operators';\n\nimport { MenuItem } from '../sidebar-menu.interface';\n\nimport { RoleService } from './role.service';\nimport { SearchService } from './search.service';\nimport { rotateAnimation } from './node.animations';\n\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'li[asm-menu-item][menuItem]',\n  animations: [rotateAnimation],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  template: `\n    <ng-container [ngSwitch]=\"true\">\n      <span *ngSwitchCase=\"!!menuItem.header\" class=\"asm-menu-item__header\">{{ menuItem.header }}</span>\n      <asm-menu-anchor\n        *ngSwitchCase=\"!menuItem.children && !menuItem.header\"\n        class=\"asm-menu-anchor\"\n        [menuItem]=\"menuItem\"\n        [disable]=\"disable || isItemDisabled\"\n      ></asm-menu-anchor>\n      <ng-container *ngSwitchCase=\"!!menuItem.children\">\n        <asm-menu-anchor\n          class=\"asm-menu-anchor\"\n          [ngClass]=\"{ 'asm-menu-anchor--open': node.isOpen }\"\n          [menuItem]=\"menuItem\"\n          (clickAnchor)=\"node.onNodeToggleClick()\"\n          [isActive]=\"node.isActiveChild\"\n          ><i toggleIcon [@rotate]=\"node.isOpen\" [class]=\"node.nodeService.toggleIconClasses\"></i\n        ></asm-menu-anchor>\n        <asm-menu-node\n          #node\n          class=\"asm-menu-node\"\n          [menuItem]=\"menuItem\"\n          [level]=\"level\"\n          [disable]=\"disable || isItemDisabled\"\n          (isActive)=\"onNodeActive($event)\"\n          (isFiltered)=\"onNodeFiltered($event)\"\n        ></asm-menu-node>\n      </ng-container>\n    </ng-container>\n  `,\n})\nexport class ItemComponent implements OnInit, OnDestroy {\n  @Input() menuItem!: MenuItem;\n  @Input() isRootNode = true;\n  @Input() level!: number;\n  @Input() disable = false;\n\n  @HostBinding('class.asm-menu-item--filtered') get filtered(): boolean {\n    return this.isItemFiltered;\n  }\n  @HostBinding('class.asm-menu-item--disabled') get disabled(): boolean {\n    return this.isItemDisabled || this.disable;\n  }\n\n  private onDestroy$ = new Subject();\n  private isActive = new BehaviorSubject(false);\n  private isFiltered = new BehaviorSubject(false);\n\n  isActive$ = this.isActive.asObservable().pipe(distinctUntilChanged(), takeUntil(this.onDestroy$));\n  isFiltered$ = this.isFiltered.asObservable().pipe(distinctUntilChanged(), takeUntil(this.onDestroy$));\n  isItemFiltered = false;\n  isItemDisabled = false;\n\n  constructor(\n    private router: Router,\n    public roleService: RoleService,\n    private searchService: SearchService,\n    private changeDetectorRef: ChangeDetectorRef\n  ) {}\n\n  ngOnInit(): void {\n    this.routerItemActiveSubscription();\n    this.emitItemActive();\n    this.menuSearchSubscription();\n    this.disabledItemSubscription();\n  }\n\n  ngOnDestroy(): void {\n    this.onDestroy$.next();\n    this.onDestroy$.complete();\n  }\n\n  onNodeActive(event: boolean): void {\n    this.isActive.next(event);\n  }\n\n  onNodeFiltered(event: boolean): void {\n    this.isItemFiltered = event;\n    this.isFiltered.next(event);\n  }\n\n  private routerItemActiveSubscription(): void {\n    this.router.events\n      .pipe(\n        filter((e: RouterEvent): e is NavigationEnd => e instanceof NavigationEnd),\n        takeUntil(this.onDestroy$)\n      )\n      .subscribe((e) => {\n        this.emitItemActive();\n      });\n  }\n\n  private menuSearchSubscription(): void {\n    if (!this.menuItem.children) {\n      this.searchService.search$.pipe(takeUntil(this.onDestroy$)).subscribe((search) => {\n        this.isItemFiltered = this.searchService.filter(search, this.menuItem.label || this.menuItem.header);\n        this.isFiltered.next(this.isItemFiltered);\n        this.changeDetectorRef.markForCheck();\n      });\n    }\n  }\n\n  private disabledItemSubscription(): void {\n    this.roleService\n      .disableItem$(this.menuItem.roles)\n      .pipe(takeUntil(this.onDestroy$))\n      .subscribe((disabled) => (this.isItemDisabled = disabled));\n  }\n\n  private emitItemActive(): void {\n    if (this.menuItem.route) {\n      this.isActive.next(this.isActiveRoute(this.menuItem.route));\n    }\n  }\n\n  private isActiveRoute(route: string): boolean {\n    return this.router.isActive(route, this.isItemLinkExact());\n  }\n\n  private isItemLinkExact(): boolean {\n    return this.menuItem.linkActiveExact === undefined ? true : this.menuItem.linkActiveExact;\n  }\n}\n","import {\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  EventEmitter,\n  HostBinding,\n  Input,\n  OnDestroy,\n  Output,\n  QueryList,\n  ViewChildren,\n} from '@angular/core';\n\nimport { combineLatest, Subject } from 'rxjs';\nimport { filter, takeUntil } from 'rxjs/operators';\n\nimport { MenuItem } from '../sidebar-menu.interface';\n\nimport { NodeService } from './node.service';\nimport { RoleService } from './role.service';\nimport { openCloseAnimation } from './node.animations';\nimport { ItemComponent } from './item.component';\nimport { trackByItem } from './utils';\n\n@Component({\n  selector: 'asm-menu-node',\n  animations: [openCloseAnimation],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  template: `<ul [@openClose]=\"isOpen\">\n    <li *ngIf=\"level === 0\" class=\"asm-menu-item\">\n      <span class=\"asm-menu-node__label\">{{ menuItem.label }}</span>\n    </li>\n    <ng-container *ngFor=\"let childItem of menuItem.children; trackBy: trackByItem\">\n      <li\n        asm-menu-item\n        class=\"asm-menu-item\"\n        *ngIf=\"roleService.showItem$(childItem.roles) | async\"\n        [menuItem]=\"childItem\"\n        [level]=\"level + 1\"\n        [disable]=\"disable\"\n      ></li>\n    </ng-container>\n  </ul>`,\n})\nexport class NodeComponent implements AfterViewInit, OnDestroy {\n  @Input() menuItem!: MenuItem;\n  @Input() level!: number;\n  @Input() disable = false;\n\n  @Output() isActive = new EventEmitter<boolean>();\n  @Output() isFiltered = new EventEmitter<boolean>();\n\n  @HostBinding('class.asm-menu-node--open') get open(): boolean {\n    return this.isOpen;\n  }\n\n  @ViewChildren(ItemComponent) private menuItemComponents!: QueryList<ItemComponent>;\n\n  isOpen = false;\n  isActiveChild = false;\n  trackByItem = trackByItem;\n\n  private onDestroy$ = new Subject();\n\n  constructor(\n    public nodeService: NodeService,\n    public roleService: RoleService,\n    private changeDetectorRef: ChangeDetectorRef\n  ) {}\n\n  ngAfterViewInit(): void {\n    this.openedNodeSubscription();\n    this.activeItemsSubscription();\n    this.filterItemsSubscription();\n  }\n\n  ngOnDestroy(): void {\n    this.onDestroy$.next();\n    this.onDestroy$.complete();\n  }\n\n  onNodeToggleClick(): void {\n    this.isOpen = !this.isOpen;\n    this.nodeService.openedNode.next({ nodeComponent: this, nodeLevel: this.level });\n    this.changeDetectorRef.markForCheck();\n  }\n\n  private activeItemsSubscription(): void {\n    const isChildrenItemsActive = this.menuItemComponents.map((item) => item.isActive$);\n\n    if (isChildrenItemsActive && isChildrenItemsActive.length) {\n      combineLatest(isChildrenItemsActive)\n        .pipe(takeUntil(this.onDestroy$))\n        .subscribe((itemsActiveState) => {\n          this.isOpen = this.isActiveChild = itemsActiveState.includes(true);\n          this.isActive.emit(this.isOpen);\n        });\n    }\n  }\n\n  private filterItemsSubscription(): void {\n    const isChildrenItemsFiltered = this.menuItemComponents.map((item) => item.isFiltered$);\n\n    if (isChildrenItemsFiltered && isChildrenItemsFiltered.length) {\n      combineLatest(isChildrenItemsFiltered)\n        .pipe(takeUntil(this.onDestroy$))\n        .subscribe((itemsFilteredState) => {\n          const isItemsFiltered = itemsFilteredState.includes(false) === false;\n          this.isFiltered.emit(isItemsFiltered);\n        });\n    }\n  }\n\n  private openedNodeSubscription(): void {\n    this.nodeService.openedNode\n      .pipe(\n        filter(() => !!this.isOpen),\n        filter((node) => node.nodeComponent !== this),\n        takeUntil(this.onDestroy$)\n      )\n      .subscribe((node) => {\n        if (node.nodeLevel <= this.level) {\n          this.isOpen = false;\n          this.changeDetectorRef.markForCheck();\n        }\n      });\n  }\n}\n","import { Component, Input, Output, EventEmitter, ChangeDetectionStrategy, HostBinding, ViewChild } from '@angular/core';\nimport { RouterLinkActive } from '@angular/router';\n\nimport { MenuItem } from '../sidebar-menu.interface';\n\nimport { AnchorService } from './anchor.service';\n\n@Component({\n  selector: 'asm-menu-anchor',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  template: `<ng-container [ngSwitch]=\"true\">\n      <a *ngSwitchCase=\"!!menuItem.children\" (click)=\"clickAnchor.emit()\">\n        <ng-container *ngTemplateOutlet=\"innerItem\"></ng-container>\n      </a>\n      <a\n        *ngSwitchCase=\"!!menuItem.route || menuItem.route === ''\"\n        [routerLink]=\"disable ? undefined : menuItem.route\"\n        routerLinkActive\n        #rla=\"routerLinkActive\"\n        [routerLinkActiveOptions]=\"{ exact: menuItem.linkActiveExact === undefined ? true : menuItem.linkActiveExact }\"\n      >\n        <ng-container *ngTemplateOutlet=\"innerItem\"></ng-container>\n      </a>\n      <a *ngSwitchCase=\"!!menuItem.url\" [href]=\"menuItem.url\" [target]=\"menuItem.target\">\n        <ng-container *ngTemplateOutlet=\"innerItem\"></ng-container>\n      </a>\n    </ng-container>\n\n    <ng-template #innerItem>\n      <i\n        *ngIf=\"menuItem.iconClasses || anchorService.iconClasses\"\n        [class]=\"menuItem.iconClasses || anchorService.iconClasses\"\n        class=\"asm-menu-anchor__icon\"\n      ></i>\n      <span class=\"asm-menu-anchor__label\">{{ menuItem.label }}</span>\n      <span\n        *ngIf=\"menuItem.badges || menuItem.children\"\n        class=\"asm-menu-anchor__pull\"\n        [ngClass]=\"{ 'asm-badges': menuItem.badges, 'asm-toggle': menuItem.children }\"\n      >\n        <span *ngFor=\"let badge of menuItem.badges\" [class]=\"badge.classes\" class=\"asm-badges__badge\">{{\n          badge.label\n        }}</span>\n        <span class=\"asm-toggle__icon\"><ng-content select=\"[toggleIcon]\"></ng-content></span>\n      </span>\n    </ng-template>`,\n})\nexport class AnchorComponent {\n  @Input() menuItem!: MenuItem;\n  @Input() isActive?: boolean;\n  @Input() disable = false;\n\n  @Output() clickAnchor = new EventEmitter<void>();\n\n  @HostBinding('class.asm-menu-anchor--active') get active(): boolean {\n    return this.isActive || (!!this.routerLinActive?.isActive && !this.disable);\n  }\n\n  @ViewChild('rla') private routerLinActive?: RouterLinkActive;\n\n  constructor(public anchorService: AnchorService) {}\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\n\nimport { SidebarMenuComponent } from './sidebar-menu.component';\n\nimport { ItemComponent } from './internal/item.component';\nimport { NodeComponent } from './internal/node.component';\nimport { AnchorComponent } from './internal/anchor.component';\n\n@NgModule({\n  declarations: [SidebarMenuComponent, ItemComponent, NodeComponent, AnchorComponent],\n  imports: [RouterModule, CommonModule],\n  exports: [SidebarMenuComponent],\n})\nexport class SidebarMenuModule {}\n","/*\n * Public API Surface of angular-sidebar-menu\n */\n\nexport * from './lib/sidebar-menu.component';\nexport * from './lib/sidebar-menu.module';\nexport * from './lib/sidebar-menu.interface';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n\nexport {AnchorComponent as ɵi} from './lib/internal/anchor.component';\nexport {AnchorService as ɵb} from './lib/internal/anchor.service';\nexport {ItemComponent as ɵe} from './lib/internal/item.component';\nexport {openCloseAnimation as ɵf,rotateAnimation as ɵg} from './lib/internal/node.animations';\nexport {NodeComponent as ɵh} from './lib/internal/node.component';\nexport {NodeService as ɵa} from './lib/internal/node.service';\nexport {RoleService as ɵc} from './lib/internal/role.service';\nexport {SearchService as ɵd} from './lib/internal/search.service';"],"names":["Modes","Injectable","Subject","BehaviorSubject","map","combineLatest","Component","ChangeDetectionStrategy","Input","trigger","state","style","AUTO_STYLE","transition","animate","distinctUntilChanged","takeUntil","filter","NavigationEnd","Router","ChangeDetectorRef","HostBinding","EventEmitter","Output","ViewChildren","ViewChild","NgModule","RouterModule","CommonModule"],"mappings":"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"}